colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,4),
scale=10)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,4),
surface=TRUE)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,4),
surface=TRUE)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,4),
surface=TRUE,
scale.z=4)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,4),
surface=TRUE,
scale.y=4)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,4),
surface=TRUE,
scale.y=4)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,4),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,3),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
grid = TRUE)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 20, phi = 20,
grid = TRUE)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
grid = TRUE)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
box = FALSE)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
box = FALSE,
grid = TRUE)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 10,
phi = 0,
bty = "b2")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 20,
phi = 0,
bty = "b2")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 30,
phi = 0,
bty = "b2")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 40,
phi = 0,
bty = "b2")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
library(rgl)
library(plot3Drgl)
library(rgl)
rgl.snapshot("snap.png")
curFrame <- orig
curFrame$z <- 8*(orig$x^2 + orig$y^2)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
rgl.snapshot("snap.png")
savePlot(filename = "poo.png")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
savePlot(filename = "poo.png")
savePlot(type = "png",filename = "poo.png")
png("plot.png")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
dev.off()
png("plot.png")
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
dev.off()
?png
png("plot.png", width=700, height = 700)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
dev.off()
png("plot.png", width=700, height = 700)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
dev.off()
orig <- poop[, c(3, 1, 2)]
curFrame <- orig
curFrame$z <- 0*(orig$x^2 + orig$y^2)
png("plot.png", width=700, height = 700)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 0,
phi = 0,
bty = "b2")
dev.off()
seq(0,1,by=.02)
length(seq(0,1,by=.02))
orig <- poop[, c(3, 1, 2)]
ind <- 0
for (i in seq(0,1,by=.02)) {
ind <- ind+1
curFrame <- orig
curFrame$z <- i*8*(orig$x^2 + orig$y^2)
png(paste0("plto/plot-",i,".png"), width=700, height = 700)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 540*i,
phi = 0,
bty = "b2")
dev.off()
}
orig <- poop[, c(3, 1, 2)]
ind <- 0
for (i in seq(0,1,by=.01)) {
ind <- ind+1
curFrame <- orig
curFrame$z <- i*8*(orig$x^2 + orig$y^2)
png(paste0("plto/plot-",ind,".png"), width=700, height = 700)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 540*i,
phi = 0,
bty = "b2")
dev.off()
}
orig <- poop[, c(3, 1, 2)]
ind <- 0
for (i in seq(0,1,by=.01)) {
ind <- ind+1
curFrame <- orig
curFrame$z <- i*8*(orig$x^2 + orig$y^2)
png(paste0("plto/plot-",ind,".png"), width=700, height = 700)
scatter3D(curFrame$x, curFrame$y, curFrame$z,
colvar = curFrame$class, col = c("#00BA38","salmon","#619CFF"),
pch=19,
zlim=c(0,2),
surface=TRUE,
scale.y=4,
theta = 360*i,
phi = 0,
bty = "b2")
dev.off()
}
library(tidyverse)
library(GGally)
library(caret)
library(WRCHSVM)
source('commonFuns.R')
wine <- read_csv('Data/Wine.csv')
names(wine) <- c('type',
'alcohol',
'malicAcid',
'ash',
'alcAsh',
'mg',
'phenols',
'flav',
'nonflav',
'proanth',
'color',
'hue',
'code',
'proline')
smWine <- wine %>% select(type,alcohol,flav,mg)
smWinePlot <- smWine
smWinePlot$type <- as.factor(smWinePlot$type)
ggpairs(smWinePlot,columns=2:ncol(smWinePlot),mapping=ggplot2::aes(colour = type))
smWine[2:4] <- as.tibble(lapply(smWine[2:4], normalize))
out <- WSVM(smWine, kernel="rbf", gamma = .5)
ggpairs(smWinePlot,columns=2:ncol(smWinePlot),mapping=ggplot2::aes(colour = type), upper = "blank")
#####Test new B
ptsList <- lapply(1:nrow(smWine), function(n) as.double(c(smWine[n,2],smWine[n,3],smWine[n,4])))
pred <- sapply(ptsList, function(pt) {
out$predict(pt)
})
confusion <- confusionMatrix(pred, smWine$type)
confusion
ggpairs(smWinePlot,columns=2:ncol(smWinePlot),mapping=ggplot2::aes(colour = type), upper = "blank", legend = TRUE)
smWinePlot
ggplot(smWinePlot, aes(x=alcohol, y = flav, color = type)) + geom_point()
devtools::install_github("swarm-lab/Rvision")
library(tidyverse)
library(WRCHSVM)
library(imager)
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[1:10]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
}
imgsDF <- as.data.frame(imgsDF)
imgsDF[,1]
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[500]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[1000]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
print(length(imgList))
for (imgName in imgList[1000]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
#print(paste0("finished ",i))
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[2000]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[1:500]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[1:100]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[1:50]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- as.data.frame(imgsDF)
imgsDF$V1
imgsDF$V1 <- as.character(imgsDF$1)
imgsDF$V1 <- as.character(imgsDF$V1)
out <- WSVM(imgsDF, kernel = "polynomial", q = 9, max_its = 20000)
is.na(imgsDF)
which(is.na(imgsDF))
out <- WSVM(imgsDF, kernel = "polynomial", q = 9, max_its = 20000, mu = NA)
out <- WSVM(df = imgsDF, kernel = "polynomial", q = 9, max_its = 20000)
source('commonFuns.R')
wine <- read_csv('Data/Wine.csv')
names(wine) <- c('type',
'alcohol',
'malicAcid',
'ash',
'alcAsh',
'mg',
'phenols',
'flav',
'nonflav',
'proanth',
'color',
'hue',
'code',
'proline')
smWine <- wine %>% select(type,alcohol,flav,mg)
smWinePlot <- smWine
smWinePlot$type <- as.factor(smWinePlot$type)
ggpairs(smWinePlot,columns=2:ncol(smWinePlot),mapping=ggplot2::aes(colour = type), upper = "blank")
ggplot(smWinePlot, aes(x=alcohol, y = flav, color = type)) + geom_point()
smWine[2:4] <- as.tibble(lapply(smWine[2:4], normalize))
out <- WSVM(smWine, kernel="monomial")
is.na(imgsDF$V1)
which(is.na(imgsDF$V1))
out <- WSVM(df = imgsDF)
out <- WSVM(df = imgsDF)
huh <- c(do.call(rbind, imgsDF[, -1]))
as.character(imgsDF[[1]])
out <- WRCHSVM::WSVM(df = imgsDF)
out <- WRCHSVM::WSVM(df = imgsDF)
out <- WRCHSVM::WSVM(df = imgsDF)
imgsDF <- matrix(ncol = 785, nrow = 0)
root <- "mnist_png/training/"
for (i in 0:9) {
imgList <- list.files(paste0(root,i))
for (imgName in imgList[1:5]) {
img <- load.image(paste0(root,i,"/",imgName))
imgsDF <- rbind(imgsDF, c(i,img %>% grayscale() %>% as.data.frame()))
}
print(paste0("finished ",i))
}
imgsDF <- as.data.frame(imgsDF)
imgsDF$V1 <- as.character(imgsDF$V1)
out <- WRCHSVM::WSVM(df = imgsDF)
length(names(imgsDF))
